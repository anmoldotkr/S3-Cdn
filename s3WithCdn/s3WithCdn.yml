AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  environment:
    Type: String
    AllowedValues:
      - dev
      - stage
      - testing
  product:
    Type: String
  service:
    Type: String
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Sub '${environment}-${product}-${service}-bucket'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
          - Sid: AllowCloudFrontServicePrincipalReadOnly
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: "S3Origin"
            S3OriginConfig: {}
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: "S3Origin"
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        DefaultRootObject: index.html
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  S3BucketName:
    Description: "The name of the S3 bucket"
    Value: !Ref S3Bucket
    Export:
      Name: !Sub '${environment}-${product}-${service}-bucket-name'
  
  CloudFrontDistributionDomainName:
    Description: "The domain name of the CloudFront distribution"
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${environment}-${product}-${service}-cloudfront-domain-name'


